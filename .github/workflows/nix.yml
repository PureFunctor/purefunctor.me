name: Nix Builds

on:

  push:
    branches:
    - develop
    - stable
    - 'feature/**'

    paths-ignore:
    - '**.md'

  pull_request:
    branches:
    - develop
    - stable
    - 'feature/**'

    paths-ignore:
    - '**.md'

  workflow_dispatch:

jobs:
  nix-builds-backend:
    name: Nix Builds (Backend)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Nix
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    
    - name: Install Cachix
      uses: cachix/cachix-action@v8
      with:
        name: ${{ secrets.CACHIX_CACHE_NAME }}
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

    - name: Link Config File
      run: ln -s app/config-default.toml config.toml

    - name: Build Backend
      run: nix-build release-backend.nix --arg doCheck true

  nix-builds-frontend:
    name: Nix Builds (Frontend)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Nix
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    
    - name: Install Cachix
      uses: cachix/cachix-action@v8
      with:
        name: ${{ secrets.CACHIX_CACHE_NAME }}
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

    - name: Build Frontend
      run: nix-build release-frontend.nix

  haskell-tests:
    name: Haskell Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Nix
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - name: Install Cachix
      uses: cachix/cachix-action@v8
      with:
        name: ${{ secrets.CACHIX_CACHE_NAME }}
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

    - name: Cache Cabal Directories
      uses: actions/cache@v2
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          dist-newstyle
        key: ${{ hashFiles('purefunctor-me.cabal') }}-${{ hashFiles('cabal.project.freeze') }}

    - name: Link Config File
      run: ln -s app/config-default.toml config.toml

    - name: Test Package
      run: |
        nix-shell --pure --run "cabal update"
        nix-shell --pure --run "cabal test --test-show-details=streaming"
